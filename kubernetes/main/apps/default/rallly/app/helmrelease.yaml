---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app rallly
  namespace: default
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 3.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      interval: 5m
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    defaultPodOptions:
      labels:
        talos.roxedus.net/maddy: "true"
    controllers:
      rallly:
        strategy: RollingUpdate
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
            envFrom: &envFrom
              - secretRef:
                  name: rallly-secret
        containers:
          app:
            image:
              repository: ghcr.io/roxedus/rallly
              tag: 3.11.2
            env:
              NEXT_PUBLIC_BASE_URL: https://rallly2.${CLUSTER_INGRESS}
              SUPPORT_EMAIL: void@${CLUSTER_INGRESS}
              # ALLOWED_EMAILS: @roxedus.dev
              NOREPLY_EMAIL: noreply@${CLUSTER_INGRESS}
              SMTP_HOST: maddy.network.svc.${CLUSTER_DOMAIN}
              SMTP_PORT: "2525"
              SMTP_TLS_ENABLED: "false"
              SMTP_SECURE: "false"
            envFrom: *envFrom
            # resources:
            #   requests:
            #     cpu: 25m
            #     memory: 25Mi
            #   limits:
            #     memory: 50Mi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL
            probes:
              liveness:
                enabled: false
              readiness:
                enabled: false
              startup:
                enabled: false
    service:
      app:
        controller: *app
        ports:
          http:
            port: 3000
    ingress:
      app:
        className: external
        enabled: true
        hosts:
          - host: &host rallly2.${CLUSTER_INGRESS}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
