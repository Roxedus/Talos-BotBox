---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: nginx-external
spec:
  interval: 30m
  chart:
    spec:
      chart: ingress-nginx
      version: 4.11.2
      sourceRef:
        kind: HelmRepository
        name: ingress-nginx
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  valuesFrom:
    - targetPath: controller.maxmindLicenseKey
      kind: Secret
      name: nginx-external-maxmind-secret
      valuesKey: MAXMIND_LICENSE_KEY
  values:
    fullnameOverride: nginx-external
    controller:
      replicaCount: 1
      updateStrategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 0
      service:
        annotations:
          external-dns.alpha.kubernetes.io/hostname: bb.${CLUSTER_INGRESS}
          load-balancer.hetzner.cloud/disable-private-ingress: "true"
          load-balancer.hetzner.cloud/disable-public-network: "false"
          load-balancer.hetzner.cloud/ipv4-rdns: ${CLUSTER_INGRESS}
          load-balancer.hetzner.cloud/ipv6-rdns: ${CLUSTER_INGRESS}
          load-balancer.hetzner.cloud/location: hel1
          load-balancer.hetzner.cloud/use-private-ip: "true"
          load-balancer.hetzner.cloud/uses-proxyprotocol: "true"
      ingressClassResource:
        name: external
        default: true
        controllerValue: k8s.io/external
      admissionWebhooks:
        objectSelector:
          matchExpressions:
            - key: ingress-class
              operator: In
              values: [external]
      allowSnippetAnnotations: true
      config:
        block-user-agents: |
          GPTBot,~*GPTBot*,ChatGPT-User,~*ChatGPT-User*,Google-Extended,~*Google-Extended*,CCBot,~*CCBot*,Omgilibot,~*Omgilibot*,FacebookBot,~*FacebookBot*,BingPreview,~*BingPreview
        client-body-buffer-size: 100M
        client-body-timeout: 120
        client-header-timeout: 120
        enable-brotli: "true"
        enable-ocsp: "true"
        enable-real-ip: "true"
        hide-headers: Server,X-Powered-By
        hsts-max-age: 31449600
        keep-alive-requests: 10000
        keep-alive: 120
        log-format-escape-json: "true"
        # log-format-upstream: >
        #   {"time": "$time_iso8601", "remote_addr": "$proxy_protocol_addr", "x_forwarded_for": "$proxy_add_x_forwarded_for",
        #   "request_id": "$req_id", "remote_user": "$remote_user", "bytes_sent": $bytes_sent, "request_time": $request_time,
        #   "status": $status, "vhost": "$host", "request_proto": "$server_protocol", "path": "$uri", "request_query": "$args",
        #   "request_length": $request_length, "duration": $request_time, "method": "$request_method", "http_referrer": "$http_referer",
        #   "http_user_agent": "$http_user_agent", "country_code": "$geoip2_city_country_code", "country_name": "$geoip2_city_country_name"}
        proxy-body-size: 0
        proxy-buffer-size: 16k
        ssl-protocols: TLSv1.3 TLSv1.2
        use-proxy-protocol: "true"
        use-geoip2: false
        use-forwarded-headers: "true"
      metrics:
        enabled: ${KPS_ENABLED}
        serviceMonitor:
          enabled: ${KPS_ENABLED}
          namespaceSelector:
            any: true
      extraArgs:
        default-ssl-certificate: network/roxedus-net-tls
      terminationGracePeriodSeconds: 120
      # topologySpreadConstraints:
      #   - maxSkew: 1
      #     topologyKey: kubernetes.io/hostname
      #     whenUnsatisfiable: DoNotSchedule
      #     labelSelector:
      #       matchLabels:
      #         app.kubernetes.io/name: ingress-nginx
      #         app.kubernetes.io/instance: nginx-external
      #         app.kubernetes.io/component: controller
      resources:
        requests:
          cpu: 100m
        limits:
          memory: 500Mi
    defaultBackend:
      enabled: false
